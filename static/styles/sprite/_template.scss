// Auto-generated by gulp-svg-sprite

$sprite-sheet: (
    'w': {{width}},
    'h': {{height}}
);
$icons: (
    {{#sprites}}
    '{{fileName}}': (
        'w': {{w}},
        'h': {{h}},
        'x': {{x}},
        'y': {{y}}
    ),
    {{/sprites}}
);

%sprite {
    display: inline-block;
    background-image: url("{{{cssPathSvg}}}");
    background-repeat: no-repeat;
    background-size: {{width}}{{units}} {{height}}{{units}};

    {{#cssPathNoSvg}}
    .lt-ie9 & {
        background-image: url("{{{cssPathNoSvg}}}");
    }
    {{/cssPathNoSvg}}
}

{{#sprites}}
%sprite-{{fileName}} {
    @extend %sprite;
    background-position: {{x}}{{units}} {{y}}{{units}};
    width: {{w}}{{units}};
    height: {{h}}{{units}};
}
{{/sprites}}

@mixin sprite($name: '', $width: false) {

    @if ($name != '') {

        $sprite-width: map-get($sprite-sheet, 'w');
        $sprite-height: map-get($sprite-sheet, 'h');

        $icon: map-get($icons, $name);
        $icon-width: map-get($icon, 'w');
        $icon-height: map-get($icon, 'h');
        $icon-pos-x: map-get($icon, 'x');
        $icon-pos-y: map-get($icon, 'y');

        // get the natural height/width ratio of the icon
        $icon-ratio: $icon-height / $icon-width;

        $new-sprite-width: $sprite-width / ($icon-width / $width);
        $new-sprite-height: $new-sprite-width / ($icon-width / $width);

        $new-icon-width: $width;
        $new-icon-height: $width * $icon-ratio;

        $new-icon-pos-x: $icon-pos-x * $icon-ratio;
        $new-icon-pos-y: $icon-pos-y * $icon-ratio;

        @extend %sprite;
        background-size: #{$new-sprite-width}px;
        background-position: #{$new-icon-pos-x}px #{$new-icon-pos-y}px;
        width: #{$new-icon-width}px;
        height: #{$new-icon-height}px;
    }
}

@mixin responsive-sprite($name){

    $sprite-width: map-get($sprite-sheet, 'w');
    $sprite-height: map-get($sprite-sheet, 'h');

    $icon: map-get($icons, $name);
    $icon-width: map-get($icon, 'w');
    $icon-height: map-get($icon, 'h');
    $icon-pos-x: map-get($icon, 'x');
    $icon-pos-y: map-get($icon, 'y');

    $space-top: floor($icon-pos-y);
    @if $space-top == 0 {
        $space-top: 0px
    }

    @extend %sprite;
    width:percentage($sprite-width / $icon-width);
    display: block;
    height: 0;
    padding-bottom: percentage($icon-height / $icon-width);
    background-size: 100%;
    background-position:0 percentage(
        -1 * $space-top / ( $sprite-height - $icon-height )
    );
}

@mixin svg-sprite($name, $width: null, $height: null) {

    $total-w: map-get($sprite-sheet, 'w');
    $total-h: map-get($sprite-sheet, 'h');
    $icon: map-get($icons, $name);
    $icon-width: map-get($icon, 'w');
    $icon-height: map-get($icon, 'h');

    $pos-x: 0;
    $pos-y: 0;

    @if ($total-w - $icon-width) != 0 {
        $pos-x: (map-get($icon, "x") * -1) / ($total-w - $icon-width);
    }

    @if ($total-h - $icon-height) != 0 {
        $pos-y: (map-get($icon, "y") * -1) / ($total-h - $icon-height);
    }

    $icon-ratio: $icon-height / $icon-width;
    $new-icon-width: $width;
    $new-icon-height: $width * $icon-ratio;

    @extend %sprite;
    background-size: percentage($total-w / map-get($icon, "w")) percentage($total-h / map-get($icon, "h"));
    background-position: percentage($pos-x) percentage($pos-y);
    width: #{$new-icon-width}px;
    height: #{$new-icon-height}px;

}
