// Jeet Grid System bower component (https://github.com/mojotech/jeet)
//@import "jeet/scss/jeet/index";

// Basic settings, resets and helper files
@import "includes/settings";
@import "includes/mixins";
@import "includes/functions";
@import "normalize-scss/normalize"; // bower component
@import "includes/reset";
@import "includes/helpers";

// Custom iconfont file, generated by running $ gulp generatefonts
//@import "fonts/iconfont";

// Global styles
@import "globals/typography";
@import "globals/forms";

// Layout/page structure for common structural components
@import "layout/header";
@import "layout/main";
@import "layout/footer";

@import "sprite/sprite";

.sprite-container {
    max-width: 500px;
    margin: auto;
}

$sprite-sheet: (
    'w': 484,
    'h': 393
);
$icons: (
    'youtube': (
        'w': 157,
        'h': 197,
        'x': -4,
        'y': -4
    )
);

.test-sprite {

    $name: 'youtube';

    display: block;
    max-width: 300px;

    &:before {
        $sprite-width: map-get($sprite-sheet, 'w');
        $sprite-height: map-get($sprite-sheet, 'h');

        $icon: map-get($icons, $name);
        $icon-width: map-get($icon, 'w');
        $icon-height: map-get($icon, 'h');
        $icon-pos-x: map-get($icon, 'x');
        $icon-pos-y: map-get($icon, 'y');

        $bg-pos-x: 0;
        $bg-pos-y: 0;

        @if ($sprite-width - $icon-width) != 0 {
            $bg-pos-x: ($icon-pos-x * -1) / ($sprite-width - $icon-width);
        }

        @if ($sprite-height - $icon-height) != 0 {
            $bg-pos-y: ($icon-pos-y * -1) / ($sprite-height - $icon-height);
        }

        @extend %sprite;

        content: '';
        display: block;
        width: 100%;
        height: 0;
        padding-bottom: percentage($icon-height / $icon-width);
        background-size: percentage($sprite-width / $icon-width) percentage($sprite-height / $icon-height);
        background-position: percentage($bg-pos-x) percentage($bg-pos-y);
    }
}
