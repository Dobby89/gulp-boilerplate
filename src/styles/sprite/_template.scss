// Auto-generated by gulp-svg-sprite

$sprite-sheet: (
    'w': {{width}},
    'h': {{height}}
);
$icons: (
    {{#sprites}}
    '{{fileName}}': (
        'w': {{w}},
        'h': {{h}},
        'x': {{x}},
        'y': {{y}}
    ),
    {{/sprites}}
);

%sprite {
    display: inline-block;
    background-repeat: no-repeat;

    background-image: url("{{{cssPathNoSvg}}}");

    @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (   min--moz-device-pixel-ratio: 2),
    only screen and (     -o-min-device-pixel-ratio: 2/1),
    only screen and (        min-device-pixel-ratio: 2),
    only screen and (                min-resolution: 192dpi),
    only screen and (                min-resolution: 2dppx) {
        background-image: url("../images/sprite@2x.png");
    }

    // you need some browser capability and user agent detection for the following:

    // only use the SVG sprite if the browser supports SVGs
    .svg.svg:not(.vendor-ie):not(.safari) & {
        background-image: none, url("{{{cssPathSvg}}}");
    }

    // older android browsers don't seem to support SVG
    .browser-android.browser-android.browser-android & {
        background-image: url("../images/sprite@2x.png");
    }
}

// retina sprite images
@mixin sprite($name: '') {

    @if ($name != '') {

        $sprite-width: map-get($sprite-sheet, 'w');
        $sprite-height: map-get($sprite-sheet, 'h');

        $icon: map-get($icons, $name);
        $icon-width: map-get($icon, 'w');
        $icon-height: map-get($icon, 'h');
        $icon-pos-x: map-get($icon, 'x');
        $icon-pos-y: map-get($icon, 'y');

        @extend %sprite;
        background-position: #{$icon-pos-x}px #{$icon-pos-y}px;
        background-size: #{$sprite-width}px #{$sprite-height}px;
        width: #{$icon-width}px;
        height: #{$icon-height}px;
    }
}

// Loop out a nice class for each sprite (.sprite-FILENAME)
{{#sprites}}
.sprite-{{fileName}} {
    @include sprite('{{fileName}}');
}
{{/sprites}}

@mixin responsive-sprite($name: ''){

    @if ($name != '') {

        $sprite-width: map-get($sprite-sheet, 'w');
        $sprite-height: map-get($sprite-sheet, 'h');

        $icon: map-get($icons, $name);
        $icon-width: map-get($icon, 'w');
        $icon-height: map-get($icon, 'h');
        $icon-pos-x: map-get($icon, 'x');
        $icon-pos-y: map-get($icon, 'y');

        $bg-pos-x: 0;
        $bg-pos-y: 0;

        @if ($sprite-width - $icon-width) != 0 {
            $bg-pos-x: ($icon-pos-x * -1) / ($sprite-width - $icon-width);
        }

        @if ($sprite-height - $icon-height) != 0 {
            $bg-pos-y: ($icon-pos-y * -1) / ($sprite-height - $icon-height);
        }

        @extend %sprite;

        display: block;
        width: 100%;
        height: 0;
        padding-bottom: percentage($icon-height / $icon-width);
        background-size: percentage($sprite-width / $icon-width) percentage($sprite-height / $icon-height);
        background-position: percentage($bg-pos-x) percentage($bg-pos-y);
    }
}

{{#sprites}}
.responsive-sprite-{{fileName}} {
    @include responsive-sprite('{{fileName}}');
}
{{/sprites}}
